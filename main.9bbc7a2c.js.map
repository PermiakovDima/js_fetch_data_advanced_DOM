{"version":3,"sources":["scripts/main.js"],"names":["url","body","document","querySelector","getPhones","fetch","then","response","json","createElem","classBlock","classList","titleText","insertAdjacentHTML","createList","listClass","text","getFirstReceivedDetails","phone","Promise","race","value","name","getAllSuccessfulDetails","all","map","elem","id","toUpperCase","catch"],"mappings":";AAAA,aAEA,IAAMA,EAAM,wEAGNC,EAAOC,SAASC,cAAc,QAE9BC,EAAY,WACTC,OAAAA,MAAML,GACVM,KAAK,SAACC,GAAaA,OAAAA,EAASC,UAGjC,SAASC,EAAWC,EAAYC,EAAWC,GACzCX,EAAKY,mBAAmB,YACRH,qBAAAA,OAAAA,EACNE,kBAAAA,OAAAA,EACOD,4BAAAA,OAAAA,EAHjB,4BAQF,SAASG,EAAWC,EAAWC,GAChBd,SAASC,cAAkBY,IAAAA,OAAAA,IAEnCF,mBAAmB,YAChBG,aAAAA,OAAAA,EADR,cAKF,IAAMC,EAA0B,WAC9Bb,IACGE,KAAK,SAAAY,GAASC,OAAAA,QAAQC,KAAKF,GAAOZ,KAAK,SAAAe,GACtCZ,EAAW,iBAAkB,aAAc,kBAC3CK,EAAW,aAAcO,EAAMC,WAI/BC,EAA0B,WAC9BnB,IACGE,KAAK,SAAAY,GAASC,OAAAA,QAAQK,IAAIN,GAAOZ,KAAK,SAAAe,GACrCZ,EAAW,iBAAkB,WAAY,kBACzCY,EAAMI,IAAI,SAAAC,GAAQZ,OAAAA,EAAW,WAAYY,EAAKC,GAAGC,sBAIvDxB,IACGE,KAAKW,GACLX,KAAKiB,GACLM","file":"main.9bbc7a2c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url = `https://mate-academy.github.io/phone-catalogue-static/`\n  + `api/phones.json`;\n\nconst body = document.querySelector('body');\n\nconst getPhones = () => {\n  return fetch(url)\n    .then((response) => response.json());\n};\n\nfunction createElem(classBlock, classList, titleText) {\n  body.insertAdjacentHTML('beforeend', `\n    <div class=\"${classBlock}\">\n      <h3>${titleText}</h3>\n      <ul class=\"${classList}\"></ul>\n    </div>\n  `);\n}\n\nfunction createList(listClass, text) {\n  const list = document.querySelector(`.${listClass}`);\n\n  list.insertAdjacentHTML('beforeend', `\n    <li>${text}</li>\n  `);\n}\n\nconst getFirstReceivedDetails = () => {\n  getPhones()\n    .then(phone => Promise.race(phone).then(value => {\n      createElem('first-received', 'first-list', 'First Received');\n      createList('first-list', value.name);\n    }));\n};\n\nconst getAllSuccessfulDetails = () => {\n  getPhones()\n    .then(phone => Promise.all(phone).then(value => {\n      createElem('all-successful', 'all-list', 'All Successful');\n      value.map(elem => createList('all-list', elem.id.toUpperCase()));\n    }));\n};\n\ngetPhones()\n  .then(getFirstReceivedDetails)\n  .then(getAllSuccessfulDetails)\n  .catch();\n"]}